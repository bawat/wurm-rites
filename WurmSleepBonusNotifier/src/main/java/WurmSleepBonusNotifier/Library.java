/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package WurmSleepBonusNotifier;

import java.io.IOException;

import ann.HerokuApp;
import ann.UploadToHeroku;
import discord4j.common.util.Snowflake;
import discord4j.core.DiscordClient;
import discord4j.core.DiscordClientBuilder;
import discord4j.core.GatewayDiscordClient;
import discord4j.core.event.domain.lifecycle.DisconnectEvent;
import discord4j.core.shard.GatewayBootstrap;
import discord4j.rest.entity.RestChannel;
import twitter4j.FilterQuery;
import twitter4j.TwitterException;
import twitter4j.TwitterStream;
import twitter4j.TwitterStreamFactory;
import heroku.HerokuEnvironmentVariables;

public class Library {
	
	@HerokuApp(herokuAppName = "wurm-rites")
	@UploadToHeroku(environmentVariableName = "WURM_SLEEP_BONUS_NOTIFIER_DISCORD_BOT_TOKEN")
	@UploadToHeroku(environmentVariableName = "twitter4j.debug")
	@UploadToHeroku(environmentVariableName = "twitter4j.oauth.accessToken")
	@UploadToHeroku(environmentVariableName = "twitter4j.oauth.accessTokenSecret")
	@UploadToHeroku(environmentVariableName = "twitter4j.oauth.consumerKey")
	@UploadToHeroku(environmentVariableName = "twitter4j.oauth.consumerSecret")
	
	public static final long
		CADENCE = 1296229994281095168L,
		MELODY = 1287152331193114624L,
		HARMONY = 1284679919205625856L,
		DEFIANCE = 1284680677951070209L;
		//MY_TWITTER = 81637628L;
	
    public static void main(String[] args) throws TwitterException, IOException {
    	addShutdownHook();
    	processAnyRites();
    }

    private static void addShutdownHook() {
    	Runtime.getRuntime().addShutdownHook(new Thread(new Runnable() {
			@Override
			public void run() {
				System.out.println("Stopping Twitter Stream");
				TwitterStream twitterStream = new TwitterStreamFactory().getInstance();
				twitterStream.cleanUp();
				twitterStream.shutdown();
				System.out.println("Stopped Twitter Stream");
			}
		}));
	}

	private static void processAnyRites() {
    	
        TwitterStream twitterStream = new TwitterStreamFactory().getInstance();
        twitterStream.addListener(new RiteTweetListener(){

			@Override
			void onTweetRecieved(String sender, String tweet) {
				System.out.println("RECIEVED TWEET: " + tweet);
				
				String serverName = sender.toLowerCase().replace("wo_", "");
				if(serverName.length() > 1) {
					serverName = (serverName.charAt(0) + "").toUpperCase() + serverName.substring(1, serverName.length()); 
				}
				
				DiscordClient client = DiscordClientBuilder.create(HerokuEnvironmentVariables.WURM_SLEEP_BONUS_NOTIFIER_DISCORD_BOT_TOKEN.getEnvVar()).build();
		    	GatewayDiscordClient connectionManager = client.login().block();
		    	
			    	RestChannel announcementChannel = client.getChannelById(Snowflake.of("763746330526220298"));
					announcementChannel.createMessage("On " + serverName + ":" + System.lineSeparator() + tweet + System.lineSeparator() + "@everyone").block();
					
				connectionManager.logout().block();
			}
        	
        });
        
        twitterStream.filter(new FilterQuery().follow(/*MY_TWITTER, */CADENCE, MELODY, HARMONY, DEFIANCE));
	}
}
