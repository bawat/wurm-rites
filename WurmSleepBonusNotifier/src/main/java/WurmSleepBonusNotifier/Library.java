/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package WurmSleepBonusNotifier;

import java.io.IOException;

import discord4j.common.util.Snowflake;
import discord4j.core.DiscordClient;
import discord4j.core.DiscordClientBuilder;
import discord4j.core.object.entity.Message;
import discord4j.core.object.entity.Role;
import discord4j.core.object.entity.channel.MessageChannel;
import discord4j.rest.entity.RestChannel;
import discord4j.rest.entity.RestRole;
import discord4j.rest.request.RouterOptions;
import reactor.core.publisher.Mono;
import twitter4j.FilterQuery;
import twitter4j.TwitterException;
import twitter4j.TwitterStream;
import twitter4j.TwitterStreamFactory;

public class Library {
	public static final long
		CADENCE = 1296229994281095168L,
		MELODY = 1287152331193114624L,
		HARMONY = 1284679919205625856L,
		DEFIANCE = 1284680677951070209L,
		MY_TWITTER = 81637628L;
	
    public static void main(String[] args) throws TwitterException, IOException {
    	processAnyRites();
    }

    private static void processAnyRites() {
    	DiscordClient client = DiscordClientBuilder.create(EnvironmentVariables.DISCORD_BOT_TOKEN.get()).build();
    	client.login().block();
    	
    	RestChannel announcementChannel = client.getChannelById(Snowflake.of("763270607457484811"));
    	
        TwitterStream twitterStream = new TwitterStreamFactory().getInstance();
        twitterStream.addListener(new RiteTweetListener(){

			@Override
			void onTweetRecieved(String sender, String tweet) {
				String serverName = sender.toLowerCase().replace("wo_", "");
				if(serverName.length() > 1) {
					serverName = (serverName.charAt(0) + "").toUpperCase() + serverName.substring(1, serverName.length()); 
				}
				
				announcementChannel.createMessage("On " + serverName + ":" + System.lineSeparator() + tweet + System.lineSeparator() + "@everyone").block();
			}
        	
        });
        
        twitterStream.filter(new FilterQuery().follow(MY_TWITTER, CADENCE, MELODY, HARMONY, DEFIANCE));
	}
}
